syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "LocationFix.proto";
import "Vessel.proto";
import "SeaMark.proto";
import "Navigation.proto";

package keelson.target;

// Compound message for sending multiple targets information
message Targets {
  google.protobuf.Timestamp timestamp = 2;
  repeated Target targets = 1;
}


// Target - tracking information
// If target is vessel or other well known object in Target Information specific object message can be included ex. Vessel.proto 
message Target {
  // Timestamp closest to when data was produced
  google.protobuf.Timestamp timestamp = 1;
  
  TargetDataSource data_source = 2;

  TargetDescription description = 3;
  
  // Target position
  foxglove.PositionFix position = 4;
  
  foxglove.LocationFix location = 11;
 
  // Speed or velocity of the target
  keelson.navigation.SpeedThroughWater speed_through_water = 5;

  keelson.navigation.TrajectoryOverGround trajectory_over_ground = 6;

  // Rate of turn of the target
  keelson.navigation.RateOfTurn rate_of_turn = 7;
  
  // Heading of the target
  keelson.navigation.Heading heading = 8;

  // Collision monitoring
  keelson.navigation.CollisionMonitoring collision_monitoring = 9;
  
  // Navigation status of the target
  keelson.navigation.NavigationStatus navigation_status = 10;
  
  string json_str = 99;
}


// Target Description
// Target message is for describing any target/object mostly static data non realtime information 
message TargetDescription {

  // Timestamp closes to when data was produced
  google.protobuf.Timestamp timestamp = 1;
 
  // Type of target according to AIS standard + some additional types identifeid by id number over 100  
  enum TargetType {  
    UNKNOWN = 0;
    VESSEL = 1; // Vessel, all ships of this type see Vessel.proto
    SEAMARK = 2 ; // Sea mark, buoy, light house etc.
  }
  TargetType target_type = 2;


  // Well know types 
  keelson.vessel.Vessel vessel = 3;
  keelson.seamark.SeaMark sea_mark = 4;


  // If taget type is NOT well known we can use this field to describe the target
  string target_json_str = 99;
}


message TargetDataSource {
  // Source where the data was generated [AIS, Radar, etc.]
  enum Source {
    OTHER = 0;
    AIS_RADIO = 1;
    AIS_PROVIDER = 2;
    RADAR_MARINE = 3;
    RADAR_VEHICLE = 4;
    LIDAR = 5;
    CAMERA_RBG = 6;
    CAMERA_MONO = 7;
    CAMERA_IR = 8;
    SIMULATION = 9;
  }
  // If sensor fusion is used, multiple data sources can be used
  repeated Source sources_type = 1;

  string source_name = 2;
  
  string source_json_str = 99;

}





