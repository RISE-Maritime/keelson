syntax = "proto3";

import "google/protobuf/timestamp.proto";

package keelson.navigation;

// Estimated Time of Arrival
message ETA {
    // The source timestamp of the ETA
    google.protobuf.Timestamp timestamp = 1;
    
    // The estimated time of arrival
    google.protobuf.Timestamp eta = 2;
    
    // The unique identifier 
    string id = 3;
    
    // The human readable name 
    string name = 4;
}

// Actual Time of Arrival
message ATA {
    // The source timestamp of the ATA
    google.protobuf.Timestamp timestamp = 1;
    
    // The actual time of arrival
    google.protobuf.Timestamp ata = 2;
    
    // The unique identifier 
    string id = 3;
    
    // The human readable name 
    string name = 4;
}

// Estimated Time of Departure
message ETD {
    // The source timestamp of the ETD
    google.protobuf.Timestamp timestamp = 1;
    
    // The estimated time of departure
    google.protobuf.Timestamp etd = 2;
    
    // The unique identifier 
    string id = 3;
    
    // The human readable name 
    string name = 4;
}

// Actual Time of Departure
message ATD {
    // The source timestamp of the ATD
    google.protobuf.Timestamp timestamp = 1;
    
    // The actual time of departure
    google.protobuf.Timestamp atd = 2;
    
    // The unique identifier 
    string id = 3;
    
    // The human readable name 
    string name = 4;
}


message CPA {
    // The source timestamp of the CPA
    google.protobuf.Timestamp timestamp = 1;
    
    // The unique identifier 
    string target_id = 2;
    
    // The human readable name 
    string target_name = 3;

    // The closest point of approach
    google.protobuf.Timestamp tcpa_time = 4;

    // Seconds to CPA
    int32 tcpa_sec = 5;

    // The closest point of approach (meters)
    google.protobuf.Timestamp cpa_m = 6;
}

message BowCrossing {
    // The source timestamp of the bow crossing
    google.protobuf.Timestamp timestamp = 1;
    
    // The unique identifier 
    string target_id = 2;
    
    // The human readable name 
    string target_name = 3;

    // The time of the bow crossing
    google.protobuf.Timestamp tbow_crossing_time = 4;

    // Seconds to bow crossing
    int32 tbow_crossing_sec = 5;

    // The distance to the bow crossing (meters)
    google.protobuf.Timestamp bow_crossing_m = 6;
}

message NavigationStatus {
    google.protobuf.Timestamp timestamp = 1;
    enum NavigationStatusType {
      UNKNOWN = 0;  
      UNDER_WAY = 1;
      AT_ANCHOR = 2;
      NOT_UNDER_COMMAND = 3;
      RESTRICTED_MANEUVERABILITY = 4;
      CONSTRAINED_BY_DRAUGHT = 5;
      MOORED = 6;
      AGROUND = 7;
      ENGAGED_IN_FISHING = 8;
      UNDER_WAY_SAILING = 9;
      FUTURE_HSC = 10;
      FUTURE_WIG = 11;
      TOWING_ASTERN = 12;
      PUSHING_AHEAD = 13;
      RESERVED_FUTURE_USE = 14;
      AIS_SART = 15;
      UNDEFINED = 16;
    }
    NavigationStatusType status = 2;
  }


message LimitMinMax {
    double min_value = 1;
    double max_value = 2;
    double min_safety_value = 3;
    double max_safety_value = 4;
  }