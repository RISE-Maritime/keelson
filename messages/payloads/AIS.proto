syntax = "proto3";

package keelson.ais;

import "google/protobuf/timestamp.proto";

// AIS Messages decoded 

// Represents a collection of AIS messages
message AISMessages {
  google.protobuf.Timestamp timestamp = 1;
  repeated AISMessage AISMessages = 2;
}

// Represents an AIS message with various attributes such as timestamp and vessel information.
message AISMessage {
  google.protobuf.Timestamp timestamp = 1;
  AISVessel ais_vessel = 2;
}

message AISVessel {
  google.protobuf.Timestamp timestamp = 1;
  int64 mmsi = 2;
  bool class_a = 3;
  bool statics_valid = 4;
  float sog_knots = 5;
  int32 position_accuracy = 6;
  double latitude_degree = 7;
  double longitude_degree = 8;
  float cog_degree = 9;
  int32 true_heading_degree = 10;
  AISVesselStatics statics = 11;
  AISVesselPositionClassA position_class_a = 12;
  AISVesselStaticsClassA statics_class_a = 13;
}

message AISVesselStatics {
  google.protobuf.Timestamp timestamp = 1;
  string callsign = 2;
  string name = 3;
  int32 type_and_cargo = 4;
  int32 dim_a_meters = 5;
  int32 dim_b_meters = 6;
  int32 dim_c_meters = 7;
  int32 dim_d_meters = 8;
}

message AISVesselStaticsClassA {
  google.protobuf.Timestamp timestamp = 1;
  int32 ais_version = 2;  
  int32 imo = 3;
  int32 fix_type = 4;
  int32 eta_month = 5;
  int32 eta_day = 6;
  int32 eta_hour = 7;
  int32 eta_minute = 8;
  float draught_meter = 9;
  string destination = 10;
}

message AISVesselPositionClassA {
  google.protobuf.Timestamp timestamp = 1;
  int32 nav_status = 2;
  bool rot_over_range = 3;
  int32 rot_raw = 4;
  float rot = 5;
  int32 special_manoeuver = 6;
}

