name: Release

on:
  release:
    types: [published]

jobs:

  python-sdk:
    permissions:
      id-token: write
      contents: read
      packages: write # allow GITHUB_TOKEN to publish packages

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build package
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
          python -m build --wheel sdks/python

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: sdks/python/dist/

  javascript-sdk:
    permissions:
      id-token: write
      contents: read
      packages: write # allow GITHUB_TOKEN to publish packages
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish package
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
          cd sdks/js
          npm ci
          ./generate_javascript.sh
          npm run compile
          npm pack
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/rise-maritime/keelson:latest
            ghcr.io/rise-maritime/keelson:${{ github.event.release.tag_name }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  docs:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache 
          restore-keys: |
            mkdocs-material-
      - run: |
          sudo wget -O /usr/bin/protodot https://protodot.seamia.net/binaries/linux && sudo chmod +x /usr/bin/protodot
          sudo apt-get update && sudo apt-get -y install graphviz
          pip install -r requirements_dev.txt
          chmod +x generate_docs.sh && ./generate_docs.sh
          mkdocs gh-deploy --force
